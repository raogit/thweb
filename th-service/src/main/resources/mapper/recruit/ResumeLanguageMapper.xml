<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianhong.dao.recruit.ResumeLanguageMapper">
  <resultMap id="BaseResultMap" type="com.tianhong.domain.recruit.ResumeLanguage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="resume_id" jdbcType="INTEGER" property="resumeId" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tan_level" jdbcType="VARCHAR" property="tanLevel" />
  </resultMap>
  <sql id="Base_Column_List">
    id, resume_id, language, level, create_time, update_time, tan_level
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_resume_language
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_resume_language
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tianhong.domain.recruit.ResumeLanguage">
    insert into t_resume_language (id, resume_id, language, 
      level, create_time, update_time, 
      tan_level)
    values (#{id,jdbcType=INTEGER}, #{resumeId,jdbcType=INTEGER}, #{language,jdbcType=VARCHAR}, 
      #{level,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{tanLevel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tianhong.domain.recruit.ResumeLanguage">
    insert into t_resume_language
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="resumeId != null">
        resume_id,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="tanLevel != null">
        tan_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="resumeId != null">
        #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tanLevel != null">
        #{tanLevel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tianhong.domain.recruit.ResumeLanguage">
    update t_resume_language
    <set>
      <if test="resumeId != null">
        resume_id = #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tanLevel != null">
        tan_level = #{tanLevel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tianhong.domain.recruit.ResumeLanguage">
    update t_resume_language
    set resume_id = #{resumeId,jdbcType=INTEGER},
      language = #{language,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tan_level = #{tanLevel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>